####################################
QUE
####################################


# 1. Loading the **** data
library(RCurl)
**** <- read.csv(text = getURL("https://raw.githubusercontent.com/****.csv") ) #From github repo

View(****)


# 2. Check for missing data

sum(is.na(****))


# 3. If data is clean and you want to practice, you can randomly introduce NA to the dataset

na.gen <- function(data,n) {
  i <- 1
  while (i < n+1) {
    idx1 <- sample(1:nrow(data), 1)
    idx2 <- sample(1:ncol(data), 1)
    data[idx1,idx2] <- NA
    i = i+1
  }
  return(data)
}


# Before introducing NA to the dataset, leave the  classcolumn* label (i.e. output variable) out

**** <- ****[,-1]


# Choose 1 of the following to run (they'll produce the same result)

**** <- na.gen(****,100)

**** <- na.gen(n=100,data=****)


# 4. Check again for missing data

sum(is.na(****))

colSums(is.na(****))   #see which columns contain NA

str(****)


# Lists rows with missing data

missingdata <- ****[!complete.cases(****), ]

sum(is.na(missingdata))


# If above sum is 0, this means that there is no missing data and proceed to modeling.
# If above sum is greater than 0, then proceed to # 5


# 5. Handling the missing data. There are 2 options, we decide and choose only 1

# 5.1. Simply delete all entries with missing data

clean.data <- na.omit(****)

sum(is.na(clean.data))


# 5.2. Imputation: Replace missing values with the column's 

# MEAN
****.impute <- ****

for (i in which(sapply(****.impute, is.numeric))) { 
  ****.impute[is.na(****.impute[, i]), i] <- mean(****.impute[, i],  na.rm = TRUE) 
}

sum(is.na(****.impute))


# MEDIAN
****.impute <- ****

for (i in which(sapply(****.impute, is.numeric))) { 
  ****.impute[is.na(****.impute[, i]), i] <- median(****.impute[, i],  na.rm = TRUE) 
}

sum(is.na(****.impute))